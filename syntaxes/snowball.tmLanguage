<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>See snowball.tmbundle/grammar-test.snowball for test cases.</string>
	<key>fileTypes</key>
	<array>
		<string>snowball</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bsnowball</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Snwoball</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#root</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((@)available)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.attribute.available.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.platform.all.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?:(\*)|\b(test|bench|export|no_mangle|deprecated|llvm_function)\b)\s*(.*?)(?=[,)])</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>builtin-types</key>
		<dict>
			<key>comment</key>
			<string>Types provided in the standard library</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-class-type</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bAny\b</string>
					<key>name</key>
					<string>support.type.any.snowball</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>builtin-class-type</key>
				<dict>
					<key>comment</key>
					<string>Builtin class types</string>
					<key>match</key>
					<string>\b(String|Vector|Range|Exception|ToString|Iterator)\b</string>
					<key>name</key>
					<string>support.class.snowball</string>
				</dict>
			</dict>
		</dict>
		<key>code-block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.snowball</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.snowball</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.snowball</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\A^(#!).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.snowball</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.playground.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\*/</string>
					<key>name</key>
					<string>invalid.illegal.unexpected-end-of-block-comment.snowball</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>///</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.triple-slash.documentation.snowball</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>//:</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.double-slash.documentation.snowball</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.double-slash.snowball</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>nested</key>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>compiler-control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.sourcelocation.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.snowball</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(file)\s*(:)\s*(?=")</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>support.variable.parameter.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?!\G)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#literals</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>support.variable.parameter.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.snowball</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>constant.numeric.integer.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(line)\s*(:)\s*([0-9]+)</string>
								</dict>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.separator.parameters.snowball</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\S+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.snowball</string>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.snowball</string>
						</dict>
						<key>7</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\S+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.snowball</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(#)(sourceLocation)((\()([^)]*)(\)))(.*?)(?=$|//|/\*)</string>
					<key>name</key>
					<string>meta.preprocessor.sourcelocation.snowball</string>
				</dict>
			</array>
		</dict>
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-initializer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#import</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#precedencegroup</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#extension</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#typealias</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>available-types</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin-types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#attributes</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(?:throw)\b</string>
							<key>name</key>
							<string>keyword.control.exception.snowball</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\bSelf\b</string>
							<key>name</key>
							<string>variable.language.snowball</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.type.function.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(-&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.type.composition.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>Swift 3: A &amp; B</string>
							<key>match</key>
							<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(&amp;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[?!]</string>
							<key>name</key>
							<string>keyword.operator.type.optional.snowball</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\.\.\.</string>
							<key>name</key>
							<string>keyword.operator.function.variadic-parameter.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Swift 2: protocol&lt;A, B&gt;</string>
							<key>match</key>
							<string>\bprotocol\b</string>
							<key>name</key>
							<string>keyword.operator.type.composition.snowball</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=\.)(?:Protocol|Type)\b</string>
							<key>name</key>
							<string>keyword.operator.type.metatype.snowball</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tuple-type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#collection-type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic-argument-clause</string>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>collection-type</key>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.collection-type.begin.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>array and dictionary types [Value] and [Key: Value]</string>
							<key>end</key>
							<string>\]|(?=[&gt;){}])</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.collection-type.end.snowball</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#available-types</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>:</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\]|[&gt;){}])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>:</string>
											<key>name</key>
											<string>invalid.illegal.extra-colon-in-dictionary-type.snowball</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#available-types</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<key>tuple-type</key>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.tuple-type.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)|(?=[&gt;\]{}])</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.tuple-type.end.snowball</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#available-types</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<key>function</key>
				<dict>
					<key>begin</key>
					<string>(?x)
						\b
						(func)
						\s+
						(
							(?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;)
						  | (?:
								(
									(?&lt;oph&gt;								# operator-head
										[/=\-+!*%&lt;&gt;&amp;|^~?]
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]
									)
									(
										\g&lt;oph&gt;
									  | (?&lt;opc&gt;								# operator-character
											[\x{0300}-\x{036F}]
										  | [\x{1DC0}-\x{1DFF}]
										  | [\x{20D0}-\x{20FF}]
										  | [\x{FE00}-\x{FE0F}]
										  | [\x{FE20}-\x{FE2F}]
										  | [\x{E0100}-\x{E01EF}]
										)
									)*
								)
							  | ( \. ( \g&lt;oph&gt; | \g&lt;opc&gt; | \. )+ )			# Dot operators
							)
						)
						\s*
						(?=\(|&lt;)
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|$(?# functions in protocol declarations or generated interfaces have no body)</string>
					<key>name</key>
					<string>meta.definition.function.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic-parameter-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parameter-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-result</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(?:throw)\b</string>
							<key>name</key>
							<string>keyword.control.exception.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Swift 3: generic constraints after the parameters and return type</string>
							<key>include</key>
							<string>#generic-where-clause</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.definition.function.body.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>function-initializer</key>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(init[?!]*(?# only one is valid, but we want the in⇥ snippet to produce something that looks good))\s*(?=\(|&lt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[?!])[?!]+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.snowball</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|$</string>
					<key>name</key>
					<string>meta.definition.function.initializer.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic-parameter-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parameter-clause</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(?:throw)\b</string>
							<key>name</key>
							<string>keyword.control.exception.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Swift 3: generic constraints after the parameters and return type</string>
							<key>include</key>
							<string>#generic-where-clause</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.definition.function.body.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>function-result</key>
				<dict>
					<key>begin</key>
					<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(?![/=\-+!*%&lt;&gt;&amp;|\^~.])\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.function-result.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)(?=\{|\bwhere\b|;)|$</string>
					<key>name</key>
					<string>meta.function-result.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#available-types</string>
						</dict>
					</array>
				</dict>
				<key>generic-argument-clause</key>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.generic-argument-clause.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;|(?=[)\]{}])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.generic-argument-clause.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.generic-argument-clause.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#available-types</string>
						</dict>
					</array>
				</dict>
				<key>generic-parameter-clause</key>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.generic-parameter-clause.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;|(?=[^\w\d:&lt;&gt;\s,=&amp;`])(?# characters besides these are never valid in a generic param list -- even if it's not really a valid clause, we should stop trying to parse it if we see one of them.)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.generic-parameter-clause.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.generic-parameter-clause.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Swift 2: constraints inside the generic param list</string>
							<key>include</key>
							<string>#generic-where-clause</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.language.generic-parameter.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b((?!\d)\w[\w\d]*)\b</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.generic-parameters.snowball</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(:)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.generic-parameter-constraint.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[,&gt;]|(?!\G)\bwhere\b)</string>
							<key>name</key>
							<string>meta.generic-parameter-constraint.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\G</string>
									<key>end</key>
									<string>(?=[,&gt;]|(?!\G)\bwhere\b)</string>
									<key>name</key>
									<string>entity.other.inherited-class.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#type-identifier</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>generic-where-clause</key>
				<dict>
					<key>begin</key>
					<string>\b(where)\b\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.generic-constraint-introducer.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)$|(?=[&gt;{};\n]|//|/\*)</string>
					<key>name</key>
					<string>meta.generic-where-clause.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#requirement-list</string>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>requirement-list</key>
						<dict>
							<key>begin</key>
							<string>\G|,\s*</string>
							<key>end</key>
							<string>(?=[,&gt;{};\n]|//|/\*)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#constraint</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#available-types</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(==)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.generic-constraint.same-type.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\s*[,&gt;{};\n]|//|/\*)</string>
									<key>name</key>
									<string>meta.generic-where-clause.same-type-requirement.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#available-types</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(:)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.generic-constraint.conforms-to.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\s*[,&gt;{};\n]|//|/\*)</string>
									<key>name</key>
									<string>meta.generic-where-clause.conformance-requirement.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>\G\s*</string>
											<key>contentName</key>
											<string>entity.other.inherited-class.snowball</string>
											<key>end</key>
											<string>(?=\s*[,&gt;{};\n]|//|/\*)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#available-types</string>
												</dict>
											</array>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<key>import</key>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(import)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.snowball</string>
						</dict>						
					</dict>
					<key>end</key>
					<string>(;)|$\n?|(?=//|/\*)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.statement.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.import.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=::)\s*</string>
						</dict>
					</array>
				</dict>
				<key>inheritance-clause</key>
				<dict>
					<key>begin</key>
					<string>(extends)(?=\s*\{)|(extends)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.empty-inheritance-clause.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance-clause.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)$|(?=[={}]|(?!\G)\bwhere\b)</string>
					<key>name</key>
					<string>meta.inheritance-clause.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\bclass\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>storage.type.class.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[={}]|(?!\G)\bwhere\b)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#more-types</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\G</string>
							<key>end</key>
							<string>(?!\G)$|(?=[={}]|(?!\G)\bwhere\b)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inherited-type</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#more-types</string>
								</dict>
							</array>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>inherited-type</key>
						<dict>
							<key>begin</key>
							<string>(?=[`\p{L}_])</string>
							<key>end</key>
							<string>(?!\G)</string>
							<key>name</key>
							<string>entity.other.inherited-class.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#type-identifier</string>
								</dict>
							</array>
						</dict>
						<key>more-types</key>
						<dict>
							<key>begin</key>
							<string>,\s*</string>
							<key>end</key>
							<string>(?!\G)(?!//|/\*)|(?=[,={}]|(?!\G)\bwhere\b)</string>
							<key>name</key>
							<string>meta.inheritance-list.more-types</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inherited-type</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#more-types</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<key>operator</key>
				<dict>
					<key>begin</key>
					<string>(?x)
						(?:
							\b(prefix|infix|postfix)
							\s+
						)?
						\b
						(operator)
						\s+
						(
							(
								(?&lt;oph&gt;									# operator-head
									[/=\-+!*%&lt;&gt;&amp;|^~?]
								  | [\x{00A1}-\x{00A7}]
								  | [\x{00A9}\x{00AB}]
								  | [\x{00AC}\x{00AE}]
								  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
								  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
								  | [\x{2030}-\x{203E}]
								  | [\x{2041}-\x{2053}]
								  | [\x{2055}-\x{205E}]
								  | [\x{2190}-\x{23FF}]
								  | [\x{2500}-\x{2775}]
								  | [\x{2794}-\x{2BFF}]
								  | [\x{2E00}-\x{2E7F}]
								  | [\x{3001}-\x{3003}]
								  | [\x{3008}-\x{3030}]
								)
								(
									\g&lt;oph&gt;
								  | \.									# Invalid dot
								  | (?&lt;opc&gt;								# operator-character
										[\x{0300}-\x{036F}]
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)*+
							)
						  | ( \. ( \g&lt;oph&gt; | \g&lt;opc&gt; | \. )++ )			# Dot operators
						)
						\s*
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.operator.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.operator.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>invalid.illegal.dot-not-allowed-here.snowball</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>end</key>
					<string>(;)|$\n?|(?=//|/\*)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.statement.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.definition.operator.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#swift2</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#swift3</string>
						</dict>
						<dict>
							<key>match</key>
							<string>((?!$|;|//|/\*)\S)+</string>
							<key>name</key>
							<string>invalid.illegal.character-not-allowed-here.snowball</string>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>swift2</key>
						<dict>
							<key>begin</key>
							<string>\G(\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.operator.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.operator.end.snowball</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.other.operator.associativity.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(associativity)\s+(left|right)\b</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>constant.numeric.integer.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(precedence)\s+([0-9]+)\b</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(assignment)\b</string>
								</dict>
							</array>
						</dict>
						<key>swift3</key>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.other.inherited-class.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#types-precedencegroup</string>
										</dict>
									</array>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\G(:)\s*((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
						</dict>
					</dict>
				</dict>
				<key>parameter-clause</key>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.parameter-clause.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-list</string>
						</dict>
					</array>
				</dict>
				<key>parameter-list</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.snowball</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>External parameter labels are considered part of the function name</string>
							<key>match</key>
							<string>((?&lt;q1&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q1&gt;))\s+((?&lt;q2&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q2&gt;))(?=\s*:)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>If no external label is given, the name is both the external label and the internal variable name</string>
							<key>match</key>
							<string>(((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;)))(?=\s*:)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>:\s*(?!\s)</string>
							<key>end</key>
							<string>(?=[,)])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#available-types</string>
								</dict>
								<dict>
									<key>match</key>
									<string>:</string>
									<key>name</key>
									<string>invalid.illegal.extra-colon-in-parameter-list.snowball</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>=</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.snowball</string>
										</dict>
									</dict>
									<key>comment</key>
									<string>a parameter's default value</string>
									<key>end</key>
									<string>(?=[,)])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#expressions</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>precedencegroup</key>
				<dict>
					<key>begin</key>
					<string>\b(precedencegroup)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*(?=\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.precedencegroup.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.precedencegroup.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>name</key>
					<string>meta.definition.precedencegroup.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.precedencegroup.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.precedencegroup.end.snowball</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>entity.other.inherited-class.snowball</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#types-precedencegroup</string>
												</dict>
											</array>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.identifier.snowball</string>
										</dict>
										<key>4</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.identifier.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(higherThan|lowerThan)\s*:\s*((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.other.operator.associativity.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(associativity)\b(?:\s*:\s*(right|left|none)\b)?</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>constant.language.boolean.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(assignment)\b(?:\s*:\s*(true|false)\b)?</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>protocol</key>
				<dict>
					<key>begin</key>
					<string>\b(protocol)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.$1.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.$1.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})</string>
					<key>name</key>
					<string>meta.definition.type.protocol.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#inheritance-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>SE-0142: Permit where clauses to constrain associated types</string>
							<key>include</key>
							<string>#generic-where-clause</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.type.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.type.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.definition.type.body.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#protocol-method</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#protocol-initializer</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#associated-type</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>associated-type</key>
						<dict>
							<key>begin</key>
							<string>\b(associatedtype)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.declaration-specifier.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.language.associatedtype.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?!\G)$|(?=[;}]|$)</string>
							<key>name</key>
							<string>meta.definition.associatedtype.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#inheritance-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>SE-0142: Permit where clauses to constrain associated types</string>
									<key>include</key>
									<string>#generic-where-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#typealias-assignment</string>
								</dict>
							</array>
						</dict>
						<key>protocol-initializer</key>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\.)\b(init[?!]*(?# only one is valid, but we want the in⇥ snippet to produce something that looks good))\s*(?=\(|&lt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?&lt;=[?!])[?!]+</string>
											<key>name</key>
											<string>invalid.illegal.character-not-allowed-here.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>end</key>
							<string>$|(?=;|//|/\*|\})</string>
							<key>name</key>
							<string>meta.definition.function.initializer.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#generic-parameter-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parameter-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#generic-where-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.function.begin.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\}</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.function.end.snowball</string>
										</dict>
									</dict>
									<key>name</key>
									<string>invalid.illegal.function-body-not-allowed-in-protocol.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<key>protocol-method</key>
						<dict>
							<key>begin</key>
							<string>(?x)
								\b
								(func)
								\s+
								(
									(?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;)
		  						  | (?:
		  								(
		  									(?&lt;oph&gt;								# operator-head
		  										[/=\-+!*%&lt;&gt;&amp;|^~?]
		  									  | [\x{00A1}-\x{00A7}]
		  									  | [\x{00A9}\x{00AB}]
		  									  | [\x{00AC}\x{00AE}]
		  									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
		  									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
		  									  | [\x{2030}-\x{203E}]
		  									  | [\x{2041}-\x{2053}]
		  									  | [\x{2055}-\x{205E}]
		  									  | [\x{2190}-\x{23FF}]
		  									  | [\x{2500}-\x{2775}]
		  									  | [\x{2794}-\x{2BFF}]
		  									  | [\x{2E00}-\x{2E7F}]
		  									  | [\x{3001}-\x{3003}]
		  									  | [\x{3008}-\x{3030}]
		  									)
		  									(
		  										\g&lt;oph&gt;
		  									  | (?&lt;opc&gt;								# operator-character
		  											[\x{0300}-\x{036F}]
		  										  | [\x{1DC0}-\x{1DFF}]
		  										  | [\x{20D0}-\x{20FF}]
		  										  | [\x{FE00}-\x{FE0F}]
		  										  | [\x{FE20}-\x{FE2F}]
		  										  | [\x{E0100}-\x{E01EF}]
		  										)
		  									)*
		  								)
		  							  | ( \. ( \g&lt;oph&gt; | \g&lt;opc&gt; | \. )+ )			# Dot operators
		  							)
		  						)
								\s*
								(?=\(|&lt;)
							</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>$|(?=;|//|/\*|\})</string>
							<key>name</key>
							<string>meta.definition.function.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#generic-parameter-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parameter-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#function-result</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#generic-where-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.function.begin.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\}</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.function.end.snowball</string>
										</dict>
									</dict>
									<key>name</key>
									<string>invalid.illegal.function-body-not-allowed-in-protocol.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<key>type</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(class(?!\s+(?:func|var|let)\b)|struct)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.$1.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.type.$1.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=\})</string>
							<key>name</key>
							<string>meta.definition.type.$1.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#generic-parameter-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>Swift 3: generic constraints after the generic param list</string>
									<key>include</key>
									<string>#generic-where-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inheritance-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.type.begin.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\}</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.type.end.snowball</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.definition.type.body.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#type-enum</string>
						</dict>
					</array>
				</dict>
				<key>type-enum</key>
				<dict>
					<key>begin</key>
					<string>\b(enum)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.$1.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.$1.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})</string>
					<key>name</key>
					<string>meta.definition.type.$1.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic-parameter-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Swift 3: generic constraints after the generic param list</string>
							<key>include</key>
							<string>#generic-where-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#inheritance-clause</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.type.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.type.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.definition.type.body.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#enum-case-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>associated-values</key>
						<dict>
							<key>begin</key>
							<string>\G\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.snowball</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?x)
										(?:(_)|((?&lt;q1&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*\k&lt;q1&gt;))
										\s+
										(((?&lt;q2&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*\k&lt;q2&gt;))
										\s*(:)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.function.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.distinct-labels-not-allowed.snowball</string>
										</dict>
										<key>5</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.function.snowball</string>
										</dict>
										<key>7</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.argument-label.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[,)\]])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#available-types</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*\k&lt;q&gt;))\s*(:)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.function.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.function.snowball</string>
										</dict>
										<key>4</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.argument-label.snowball</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[,)\]])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#available-types</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?![,)\]])(?=\S)</string>
									<key>comment</key>
									<string>an element without a label (i.e. anything else)</string>
									<key>end</key>
									<string>(?=[,)\]])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#available-types</string>
										</dict>
										<dict>
											<key>match</key>
											<string>:</string>
											<key>name</key>
											<string>invalid.illegal.extra-colon-in-parameter-list.snowball</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<key>enum-case</key>
						<dict>
							<key>begin</key>
							<string>(?x)((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=\))|(?![=(])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#associated-values</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#raw-value-assignment</string>
								</dict>
							</array>
						</dict>
						<key>enum-case-clause</key>
						<dict>
							<key>begin</key>
							<string>\b(case)\b\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.enum.case.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[;}])|(?!\G)(?!//|/\*)(?=[^\s,])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#enum-case</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#more-cases</string>
								</dict>
							</array>
						</dict>
						<key>more-cases</key>
						<dict>
							<key>begin</key>
							<string>,\s*</string>
							<key>end</key>
							<string>(?!\G)(?!//|/\*)(?=[;}]|[^\s,])</string>
							<key>name</key>
							<string>meta.enum-case.more-cases</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#enum-case</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#more-cases</string>
								</dict>
							</array>
						</dict>
						<key>raw-value-assignment</key>
						<dict>
							<key>begin</key>
							<string>(=)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?!\G)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#literals</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<key>type-identifier</key>
				<dict>
					<key>begin</key>
					<string>((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.type-name.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#builtin-types</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!&lt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=&lt;)</string>
							<key>end</key>
							<string>(?!\G)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#generic-argument-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>typealias</key>
				<dict>
					<key>begin</key>
					<string>\b(typealias)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.declaration-specifier.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.typealias.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.identifier.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)$|(?=;|//|/\*|$)</string>
					<key>name</key>
					<string>meta.definition.typealias.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\G(?=&lt;)</string>
							<key>end</key>
							<string>(?!\G)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#generic-parameter-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-assignment</string>
						</dict>
					</array>
				</dict>
				<key>typealias-assignment</key>
				<dict>
					<key>begin</key>
					<string>(=)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)$|(?=;|//|/\*|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#available-types</string>
						</dict>
					</array>
				</dict>
				<key>types-precedencegroup</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>Precedence groups in the standard library</string>
							<key>match</key>
							<string>\b(?:BitwiseShift|Assignment|RangeFormation|Casting|Addition|NilCoalescing|Comparison|LogicalConjunction|LogicalDisjunction|Default|Ternary|Multiplication|FunctionArrow)Precedence\b</string>
							<key>name</key>
							<string>support.type.snowball</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#closure-parameter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#compound-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#subscript-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parenthesized-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#member-reference</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#availability-condition</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b_\b</string>
					<key>name</key>
					<string>support.variable.discard-value.snowball</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>availability-condition</key>
				<dict>
					<key>begin</key>
					<string>\B(#available)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.availability-condition.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.snowball</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.platform.all.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\*)\s*(.*?)(?=[,)])</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s,)]+</string>
							<key>name</key>
							<string>invalid.illegal.character-not-allowed-here.snowball</string>
						</dict>
					</array>
				</dict>
				<key>closure-parameter</key>
				<dict>
					<key>match</key>
					<string>\$[0-9]+</string>
					<key>name</key>
					<string>variable.language.closure-parameter.snowball</string>
				</dict>
				<key>compound-name</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.compound-name.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.entity.snowball</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.entity.snowball</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?&lt;q&gt;`?)(?!_:)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;):</string>
									<key>name</key>
									<string>entity.name.function.compound-name.snowball</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>comment</key>
					<string>a reference to a function with disambiguating argument labels, such as foo(_:), foo(bar:), etc.</string>
					<key>match</key>
					<string>(?x)
						((?&lt;q1&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q1&gt;))       		# function name
						\(
							(
								(
									((?&lt;q2&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q2&gt;)) 	# argument label
									:												# colon
								)+
							)
						\)
					</string>
				</dict>
				<key>expression-element-list</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*(:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.any-method.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.argument-label.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>an element with a label</string>
							<key>end</key>
							<string>(?=[,)\]])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?![,)\]])(?=\S)</string>
							<key>comment</key>
							<string>an element without a label (i.e. anything else)</string>
							<key>end</key>
							<string>(?=[,)\]])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>function-call-expression</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.any-method.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.begin.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>foo(args) -- a call whose callee is a highlightable name</string>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression-element-list</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=[`\])}&gt;\p{L}_\p{N}\p{M}])\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.begin.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>[Int](args) -- a call whose callee is a more complicated expression</string>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.end.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression-element-list</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<key>member-reference</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.snowball</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.identifier.snowball</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;=\.)((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
						</dict>
					</array>
				</dict>
				<key>parenthesized-expression</key>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.tuple.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.tuple.end.snowball</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression-element-list</string>
						</dict>
					</array>
				</dict>
				<key>subscript-expression</key>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[`\p{L}_\p{N}\p{M}])\s*(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.snowball</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.subscript-expression.snowball</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression-element-list</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:if|else|where|switch|case|default)\b</string>
					<key>name</key>
					<string>keyword.control.branch.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:continue|break|return)\b</string>
					<key>name</key>
					<string>keyword.control.transfer.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:while|for|in)\b</string>
					<key>name</key>
					<string>keyword.control.loop.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:catch|throw|try)\b|\btry[?!]\B</string>
					<key>name</key>
					<string>keyword.control.exception.snowball</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.trailing.do.snowball</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>extra scopes for do-catch snippet</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(do)\b(\s*)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:let|operator|type)\b</string>
					<key>name</key>
					<string>keyword.other.declaration-specifier.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(class|enum|interface|struct)\b</string>
					<key>name</key>
					<string>storage.type.$1.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:static|external|unsafe|final|mut|override|dynamic|extends|implements)\b</string>
					<key>name</key>
					<string>storage.modifier.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:func|operator)\b</string>
					<key>name</key>
					<string>storage.type.function.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:private|public)\b</string>
					<key>name</key>
					<string>keyword.other.declaration-specifier.accessibility.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:super|self|Self)\b</string>
					<key>name</key>
					<string>variable.language.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\b(?:new)\b)(\s*)(\b(?:type)\b)</string>
					<key>name</key>
					<string>keyword.other.declaration-specifier.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\B(?:#file|#line|#column|#function|#dsohandle)\b|\b(?:__FILE__|__LINE__|__COLUMN__|__FUNCTION__|__DSO_HANDLE__)\b</string>
					<key>name</key>
					<string>support.variable.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\bimport\b</string>
					<key>name</key>
					<string>keyword.control.import.snowball</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#boolean</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnil\b</string>
					<key>name</key>
					<string>constant.language.nil.snowball</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>object "literals" used in playgrounds</string>
					<key>match</key>
					<string>\B#(colorLiteral|imageLiteral|fileLiteral)\b</string>
					<key>name</key>
					<string>support.function.object-literal.snowball</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\B#keyPath\b</string>
					<key>name</key>
					<string>support.function.key-path.snowball</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\B(#selector)(\()(?:\s*(getter|setter)\s*(:))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.selector-reference.snowball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.snowball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.variable.parameter.snowball</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.argument-label.snowball</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.snowball</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>boolean</key>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.snowball</string>
				</dict>
				<key>numeric</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>0.1, -4_2.5, 6.022e23, 10E-5</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9][0-9_]*(?=\.[0-9]|[eE])(?:\.[0-9][0-9_]*)?(?:[eE][-+]?[0-9][0-9_]*)?\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.float.decimal.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>-0x1.ap2_3, 0x31p-4</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\.[0-9a-fA-F][0-9a-fA-F_]*)?[pP][-+]?[0-9][0-9_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.float.hexadecimal.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x1p, 0x1p_2, 0x1.5pa, 0x1.1p+1f, 0x1pz</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\.[0-9a-fA-F][0-9a-fA-F_]*)?(?:[pP][-+]?\w*)\b(?!\.[0-9])</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.invalid-exponent.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x1.5w (note that 0x1.f may be a valid expression)</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)\.[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.missing-exponent.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>-.5, .2f (note that 1.-.5 may be a valid expression)</string>
							<key>match</key>
							<string>(?&lt;=\s|^)\-?\.[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.missing-leading-zero.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0b_0_1, 0x_1p+3q</string>
							<key>match</key>
							<string>(\B\-|\b)0[box]_[0-9a-fA-F_]*(?:[pPeE][+-]?\w+)?[\w.]+</string>
							<key>name</key>
							<string>invalid.illegal.numeric.leading-underscore.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>tuple positional member: not really a numeric literal, but not invalid</string>
							<key>match</key>
							<string>(?&lt;=[\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9]+\b</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0b010, 0b1_0</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0b[01][01_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.binary.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0o1, 0o7_3</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0o[0-7][0-7_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.octal.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>02, 3_456</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9][0-9_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.decimal.snowball</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x4, 0xF_7</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0x[0-9a-fA-F][0-9a-fA-F_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.hexadecimal.snowball</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\B\-|\b)[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.other.snowball</string>
						</dict>
					</array>
				</dict>
				<key>string</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>"""</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>SE-0168: Multi-Line String Literals</string>
							<key>end</key>
							<string>"""(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.block.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\G.+(?=""")|\G.+</string>
									<key>name</key>
									<string>invalid.illegal.content-after-opening-delimiter.snowball</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\\s*\n</string>
									<key>name</key>
									<string>constant.character.escape.newline.snowball</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#string-guts</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>Allow \("""...""") to appear inside a block string</string>
									<key>match</key>
									<string>\S((?!\\\().)*(?=""")</string>
									<key>name</key>
									<string>invalid.illegal.content-before-closing-delimiter.snowball</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>#"""</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"""#(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.block.raw.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\G.+(?=""")|\G.+</string>
									<key>name</key>
									<string>invalid.illegal.content-after-opening-delimiter.snowball</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\#\s*\n</string>
									<key>name</key>
									<string>constant.character.escape.newline.snowball</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#raw-string-guts</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>Allow \("""...""") to appear inside a block string</string>
									<key>match</key>
									<string>\S((?!\\#\().)*(?=""")</string>
									<key>name</key>
									<string>invalid.illegal.content-before-closing-delimiter.snowball</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(##+)"""</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"""\1(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.block.raw.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\G.+(?=""")|\G.+</string>
									<key>name</key>
									<string>invalid.illegal.content-after-opening-delimiter.snowball</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.snowball</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.single-line.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\r|\n</string>
									<key>name</key>
									<string>invalid.illegal.returns-not-allowed.snowball</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#string-guts</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(##+)"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.raw.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>SE-0168: raw string literals (more than one #, grammar limitations prevent us from supporting escapes)</string>
							<key>end</key>
							<string>"\1(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.raw.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.single-line.raw.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\r|\n</string>
									<key>name</key>
									<string>invalid.illegal.returns-not-allowed.snowball</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>#"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.raw.snowball</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>SE-0168: raw string literals (one #, escapes supported)</string>
							<key>end</key>
							<string>"#(#*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.raw.snowball</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.extra-closing-delimiter.snowball</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.single-line.raw.snowball</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\r|\n</string>
									<key>name</key>
									<string>invalid.illegal.returns-not-allowed.snowball</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#raw-string-guts</string>
								</dict>
							</array>
						</dict>
					</array>
					<key>repository</key>
					<dict>
						<key>raw-string-guts</key>
						<dict>
							<key>comment</key>
							<string>the same as #string-guts but with # in escapes</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\\#[0\\tnr"']</string>
									<key>name</key>
									<string>constant.character.escape.snowball</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\#u\{[0-9a-fA-F]{1,8}\}</string>
									<key>name</key>
									<string>constant.character.escape.unicode.snowball</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\\#\(</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.begin.snowball</string>
										</dict>
									</dict>
									<key>contentName</key>
									<string>source.snowball</string>
									<key>end</key>
									<string>(\))</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.end.snowball</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>source.snowball</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.embedded.line.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\(</string>
											<key>comment</key>
											<string>Nested parens</string>
											<key>end</key>
											<string>\)</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>\\#.</string>
									<key>name</key>
									<string>invalid.illegal.escape-not-recognized</string>
								</dict>
							</array>
						</dict>
						<key>string-guts</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\\[0\\tnr"']</string>
									<key>name</key>
									<string>constant.character.escape.snowball</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\u\{[0-9a-fA-F]{1,8}\}</string>
									<key>name</key>
									<string>constant.character.escape.unicode.snowball</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\\\(</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.begin.snowball</string>
										</dict>
									</dict>
									<key>contentName</key>
									<string>source.snowball</string>
									<key>end</key>
									<string>(\))</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.end.snowball</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>source.snowball</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.embedded.line.snowball</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\(</string>
											<key>comment</key>
											<string>Nested parens</string>
											<key>end</key>
											<string>\)</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>\\.</string>
									<key>name</key>
									<string>invalid.illegal.escape-not-recognized</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</dict>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Type casting</string>
					<key>match</key>
					<string>\b(as([!?]\B|\b))</string>
					<key>name</key>
					<string>keyword.operator.type-casting.snowball</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
						(?=
							(?&lt;oph&gt;								# operator-head
								[/=\-+!*%&lt;&gt;&amp;|^~?]
							  | [\x{00A1}-\x{00A7}]
							  | [\x{00A9}\x{00AB}]
							  | [\x{00AC}\x{00AE}]
							  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
							  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
							  | [\x{2030}-\x{203E}]
							  | [\x{2041}-\x{2053}]
							  | [\x{2055}-\x{205E}]
							  | [\x{2190}-\x{23FF}]
							  | [\x{2500}-\x{2775}]
							  | [\x{2794}-\x{2BFF}]
							  | [\x{2E00}-\x{2E7F}]
							  | [\x{3001}-\x{3003}]
							  | [\x{3008}-\x{3030}]
							)
						  | \.
							(
								\g&lt;oph&gt;							# operator-head
							  | \.
							  | [\x{0300}-\x{036F}]				# operator-character
							  | [\x{1DC0}-\x{1DFF}]
							  | [\x{20D0}-\x{20FF}]
							  | [\x{FE00}-\x{FE0F}]
							  | [\x{FE20}-\x{FE2F}]
							  | [\x{E0100}-\x{E01EF}]
							)
						)
					</string>
					<key>comment</key>
					<string>This rule helps us speed up the matching.</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\G(\+\+|\-\-)$</string>
											<key>name</key>
											<string>keyword.operator.increment-or-decrement.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(\+|\-)$</string>
											<key>name</key>
											<string>keyword.operator.arithmetic.unary.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G!$</string>
											<key>name</key>
											<string>keyword.operator.logical.not.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G~$</string>
											<key>name</key>
											<string>keyword.operator.bitwise.not.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.prefix.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Prefix unary operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								(?&lt;=^|[\s(\[{,;:])
								(
									(?!(//|/\*|\*/))
									(
										[/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
								(?![\s)\]},;:]|\z)
							</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\G(\+\+|\-\-)$</string>
											<key>name</key>
											<string>keyword.operator.increment-or-decrement.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G!$</string>
											<key>name</key>
											<string>keyword.operator.increment-or-decrement.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.postfix.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Postfix unary operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								(?&lt;!^|[\s(\[{,;:])
								(
									(?!(//|/\*|\*/))
									(
										[/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
								(?=[\s)\]},;:]|\z)
							</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\G=$</string>
											<key>name</key>
											<string>keyword.operator.assignment.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(\+|\-|\*|/|%|&lt;&lt;|&gt;&gt;|&amp;|\^|\||&amp;&amp;|\|\|)=$</string>
											<key>name</key>
											<string>keyword.operator.assignment.compound.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(\+|\-|\*|/)$</string>
											<key>name</key>
											<string>keyword.operator.arithmetic.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G&amp;(\+|\-|\*)$</string>
											<key>name</key>
											<string>keyword.operator.arithmetic.overflow.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G%$</string>
											<key>name</key>
											<string>keyword.operator.arithmetic.remainder.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(==|!=|&gt;|&lt;|&gt;=|&lt;=|~=)$</string>
											<key>name</key>
											<string>keyword.operator.comparison.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G\?\?$</string>
											<key>name</key>
											<string>keyword.operator.coalescing.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(&amp;&amp;|\|\|)$</string>
											<key>name</key>
											<string>keyword.operator.logical.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(&amp;|\||\^|&lt;&lt;|&gt;&gt;)$</string>
											<key>name</key>
											<string>keyword.operator.bitwise.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G(===|!==)$</string>
											<key>name</key>
											<string>keyword.operator.bitwise.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\G\?$</string>
											<key>name</key>
											<string>keyword.operator.ternary.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.infix.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Infix operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								(
									(?!(//|/\*|\*/))
									(
										[/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
							</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.prefix.dot.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Dot prefix unary operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								(?&lt;=^|[\s(\[{,;:])
								\.										# dot
								(
									(?!(//|/\*|\*/))
									(
										\.								# dot
									  | [/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
								(?![\s)\]},;:]|\z)
							</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.postfix.dot.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Dot postfix unary operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								(?&lt;!^|[\s(\[{,;:])
								\.										# dot
								(
									(?!(//|/\*|\*/))
									(
										\.								# dot
									  | [/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
								(?=[\s)\]},;:]|\z)
							</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\G\.\.[.&lt;]$</string>
											<key>name</key>
											<string>keyword.operator.range.snowball</string>
										</dict>
										<dict>
											<key>match</key>
											<string>.+</string>
											<key>name</key>
											<string>keyword.operator.custom.infix.dot.snowball</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>comment</key>
							<string>Dot infix operator</string>
							<key>match</key>
							<string>(?x)
								\G										# Matching from the beginning ensures
																		# that we start with operator-head
								\.										# dot
								(
									(?!(//|/\*|\*/))
									(
										\.								# dot
									  | [/=\-+!*%&lt;&gt;&amp;|^~?]				# operator-head
									  | [\x{00A1}-\x{00A7}]
									  | [\x{00A9}\x{00AB}]
									  | [\x{00AC}\x{00AE}]
									  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
									  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
									  | [\x{2030}-\x{203E}]
									  | [\x{2041}-\x{2053}]
									  | [\x{2055}-\x{205E}]
									  | [\x{2190}-\x{23FF}]
									  | [\x{2500}-\x{2775}]
									  | [\x{2794}-\x{2BFF}]
									  | [\x{2E00}-\x{2E7F}]
									  | [\x{3001}-\x{3003}]
									  | [\x{3008}-\x{3030}]

									  | [\x{0300}-\x{036F}]				# operator-character
									  | [\x{1DC0}-\x{1DFF}]
									  | [\x{20D0}-\x{20FF}]
									  | [\x{FE00}-\x{FE0F}]
									  | [\x{FE20}-\x{FE2F}]
									  | [\x{E0100}-\x{E01EF}]
									)
								)++
							</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
					<key>name</key>
					<string>keyword.operator.ternary.snowball</string>
				</dict>
			</array>
		</dict>
		<key>root</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#compiler-control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#declarations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.snowball</string>
	<key>uuid</key>
	<string>8C743E89-9C8D-4833-8149-6500D82AA463</string>
</dict>
</plist>